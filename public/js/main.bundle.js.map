{"version":3,"sources":["C:/xampp/htdocs/tSoft/resources/assets/src/$_lazy_route_resource lazy","C:/xampp/htdocs/tSoft/resources/assets/src/app/app-routing.module.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/app.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/app.module.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/app.provider.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/dashboard.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/department.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/form-control.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/login.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/manage-role.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/manage-users.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/role.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/component/user.component.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/global.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/services/app.service.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/services/loader.service.ts","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/app.component.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/dashboard.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/department.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/manage-form-control.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/manage-role.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/manage-users.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/more-login.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/role.html","C:/xampp/htdocs/tSoft/resources/assets/src/app/template/users.html","C:/xampp/htdocs/tSoft/resources/assets/src/environments/environment.ts","C:/xampp/htdocs/tSoft/resources/assets/src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../resources/assets/src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/$$_lazy_route_resource lazy\n// module id = ../../../../../resources/assets/src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule,OnInit }             from '@angular/core';\nimport { RouterModule, Routes, LoadChildren } from '@angular/router';\n\nimport { AppProvider }         from './app.provider';\n\nimport { LoginComponent }   from './component/login.component';\nimport { DashboardComponent }   from './component/dashboard.component';\nimport { UserComponent }   from './component/user.component';\nimport { ManageUsersComponent }   from './component/manage-users.component';\nimport { FormControlComponent }   from './component/form-control.component';\nimport { RoleComponent }   from './component/role.component';\nimport { ManageRoleComponent }   from './component/manage-role.component';\nimport { DepartmentComponent }   from './component/department.component';\n\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: 'login',  component: LoginComponent },\n    { path: 'dashboard',  component: DashboardComponent },\n    { path: 'department',  component: DepartmentComponent },\n    { path: 'users',  component: UserComponent },\n    { path: 'users/add',  component: ManageUsersComponent },\n    { path: 'users/edit/:id',  component: ManageUsersComponent },\n    { path: 'form-control-manager',  component: FormControlComponent },\n    { path: 'role-manager',  component: RoleComponent },\n    { path: 'role-manager/add',  component: ManageRoleComponent },\n    { path: 'role-manager/edit/:id',  component: ManageRoleComponent },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes,{ useHash: true }) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule implements OnInit{\n\tconstructor(private service : AppProvider){\n\n\t}\n\tngOnInit() {\n    console.log('sadas');\n        // this.service.checkRoute()\n       \n    }\n\n}\n\n/*\nCopyright 2017 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/app-routing.module.ts","import { Component,OnInit  } from '@angular/core';\nimport { GlobalVariable } from './global';\nimport { AppService } from './services/app.service';\nimport { Router, ActivatedRoute,NavigationStart, Event as NavigationEvent, Params } from '@angular/router';\n//import 'rxjs/add/operator/pairwise';\nimport * as io from 'socket.io-client';\nimport { LoaderService } from './services/loader.service';\nimport {NgForm} from '@angular/forms';\nimport swal from 'sweetalert2';\ndeclare var $: any;\n@Component({\n  selector: 'app-root',\n  templateUrl: './template/app.component.html',\n  //styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  contactpasswordAlphabet: boolean;\n  contactpasswordNumeric: boolean;\n  contactpasswordInvalid: boolean;\n  controluser: object={};\n  title = 'app';\n  showLoader: boolean;\n  userToken: string;\n  userId: string;\n  public BASE_API_URL:any =GlobalVariable.BASE_API_URL;\n  public socket:any =io(GlobalVariable.SOCKET_URL);\n  userNameLabel: string;\n  public siteUrl :any;\n  public changePassword : Object = {};\n  //constructor\n    constructor(private router : Router,private activatedRoute: ActivatedRoute,\n                public appService : AppService,private loaderService: LoaderService){\n         this.siteUrl = GlobalVariable.BASE_API_URL;\n         this.appService.setSocket(this.socket);\n         this.userNameLabel=window.localStorage.getItem('user-name');\n         this.userId=window.localStorage.getItem('user-credential');\n    }\n   \n     ngOnInit(): void {\n        var that = this;\n        this.loaderService.status.subscribe((val: boolean) => {\n            that.showLoader = val;\n        });\n         \n        //if login credential is correct\n        this.socket.on('success-login', function(data){\n            window.localStorage.setItem('user-token',data.remember_token);\n            window.localStorage.setItem('user-credential',data.id);\n            that.userId=window.localStorage.getItem('user-credential');\n            window.localStorage.setItem('user-name',data.contact_username);\n            that.userNameLabel = window.localStorage.getItem('user-name');\n            that.router.navigate(['/dashboard']);\n        });\n        \n        //if something went wrong during login \n        this.socket.on('stop-login', function(data){\n             if(data.data === 'incorrectCredential'){\n                console.log('incorrectCredential'); \n                var x = document.getElementById(\"snackbar\")\n                x.className = \"show\";\n                setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n             }else{\n                var x = document.getElementById(\"snackbares\")\n                x.className = \"show\";\n                setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n             }\n        });\n        \n         //if the user request for edit and someone is already editing \n        this.socket.on('fail-editmode', function(data){\n            var x = document.getElementById(\"editError\")\n           x.className = \"show\";\n           setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n        });\n        \n        //if the user simply tries to swap menu and doesnot have edit form  \n        this.socket.on('endEditMode', function(){\n            localStorage.setItem('editingModeID','');\n        });\n     }\n\n     \n     signout(){\n         var userid = window.localStorage.getItem('user-credential');\n         window.localStorage.setItem('user-token','');\n         window.localStorage.setItem('user-credential','');\n         this.socket.emit('logoutRequest',userid);\n         this.router.navigate(['/login']);\n     }\n     \n     profileEdit(){\n         var that=this;\n         this.router.navigate(['/manage-users/edit', that.userId])\n     }\n     \n    changeOfRoutes(){\n       // alert('change menu');\n        let param1 = window.location.href;\n        var substring =localStorage.getItem('editingModeID');\n        if(param1.indexOf(substring) !== -1){\n            this.socket.emit('editmode', {userid: this.userId, editid: substring});\n           // alert('you reloaded page');  \n        }else{\n          //      alert('you are not editing any form');\n                this.socket.emit('editmode',{userid: this.userId});\n        }\n        \n        //get dynamic validation credential\n        if(this.userId){\n            this.appService.getUserFormControls().subscribe(res => {\n                this.controluser = res.data;\n            },err => { console.log(err); });\n        }\n\n        if(!window.localStorage.getItem('user-token')){\n            this.router.navigate(['/login'])\n        }\n    }\n    \n    openPasswordModal(f:NgForm){\n        $('#passwordModal').modal('show');\n    }\n    \n    updatePassword(){\n        \n          swal({\n            title: 'Enter Remark',\n            input: 'text',\n            showCancelButton: true,\n            confirmButtonText: 'Submit',\n            showLoaderOnConfirm: true,\n            preConfirm: (text) => {\n                return new Promise((resolve) => {\n                    this.changePassword['remark']=text;\n                    this.appService.updatePassword(this.changePassword).subscribe(res =>{\n                        if(res === 'Incorrect Credential'){\n                                var x = document.getElementById(\"snackbar\")\n                                x.className = \"show\";\n                                setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n                         }else{\n                                $('#passwordModal').modal('hide');\n                                var x = document.getElementById(\"updatePass\")\n                                x.className = \"show\";\n                                setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n                         }\n                    },err=>{\n                           console.log(err);\n                           swal({\n                            type: 'warning',\n                            title: 'Request Failed!',\n                            html: 'Try Again'\n                          });\n                    });\n                    resolve();\n                })\n            },\n          allowOutsideClick: () => !swal.isLoading()\n        });\n    }\n     \n    _keyPress(event: any) {\n        \n       var Specialdata = event.target.value.match(/[~`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/g)||[];\n       if (Specialdata && Specialdata.length <= this.controluser['password_specialChar']){\n           this.contactpasswordInvalid=true;\n       }else{\n           this.contactpasswordInvalid=false;\n       }\n       var Numberdata =event.target.value.match(/\\d/g) || [];\n       if (Numberdata && Numberdata.length <= this.controluser['password_numeric']){\n           this.contactpasswordNumeric=true;\n       }else{\n           this.contactpasswordNumeric=false;\n       }\n       \n        var rx = /[a-z]/gi;\n        var AlphabetData = event.target.value.match(rx);\n        if (AlphabetData && AlphabetData.lebgth <= this.controluser['password_alphabets']) {\n          this.contactpasswordAlphabet=true;\n        }else{\n            this.contactpasswordAlphabet=false;\n        }\n    } \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/app.component.ts","import { NgModule }       from '@angular/core';\nimport { HttpModule } from \"@angular/http\";\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule }    from '@angular/forms';\nimport { AppRoutingModule }     from './app-routing.module';\nimport { AppComponent }         from './app.component';\nimport { LoginComponent }   from './component/login.component';\nimport { DashboardComponent }   from './component/dashboard.component';\nimport { UserComponent }   from './component/user.component';\nimport { AppProvider }         from './app.provider';\nimport { AppService } from './services/app.service';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ManageUsersComponent }   from './component/manage-users.component';\nimport { LoaderService } from './services/loader.service';\nimport { FormControlComponent }   from './component/form-control.component';\nimport { RoleComponent }   from './component/role.component';\nimport { ManageRoleComponent }   from './component/manage-role.component';\nimport { DepartmentComponent }   from './component/department.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    UserComponent,\n    ManageUsersComponent,\n    FormControlComponent,\n    RoleComponent,\n    ManageRoleComponent,\n    DepartmentComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpModule,\n    DataTablesModule\n  ],\n  providers: [AppProvider ,AppService,LoaderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { GlobalVariable } from './global';\n@Injectable()\nexport class AppProvider {\n        public socket:any =io(GlobalVariable.SOCKET_URL);\n\tconstructor() {\n\t\tconsole.log('Provider');\n                var userid = window.localStorage.getItem('user-credential');\n                    if (typeof userid === \"string\"){\n                    this.socket.emit('addRemovedUser',{data:userid});\n                }\n        }\n\tcheckRoute(){\n\t\tconsole.info('check Route');\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/app.provider.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { GlobalVariable } from '.././global';\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport {Router, ActivatedRoute} from '@angular/router';\n\ndeclare var $: any;\n@Component({\n  templateUrl: '.././template/dashboard.html'\n})\nexport class DashboardComponent implements OnInit {\n   \n    BASE_API_URL: string;\n\n  \n  \tconstructor(private router : Router,private appService : AppService) {\n           \n            $(\"#navigation\").show();\n            document.querySelector('body').classList.remove('login');\n            this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n        }\n        \n        ngOnInit(): void {\n            console.log('Dashboard Component');\n        }\n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/dashboard.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { GlobalVariable } from '.././global';\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport * as io from \"socket.io-client\";\nimport { LoaderService } from '.././services/loader.service';\nimport swal from 'sweetalert2';\nimport {NgForm} from '@angular/forms';\n\ndeclare var $: any;\n@Component({\n  templateUrl: '.././template/department.html'\n})\nexport class DepartmentComponent implements OnInit {\n    departmentEdit: any;\n    loggedUser: string;\n    socket:any;\n    departments:any=[];\n    logged: string;\n    BASE_API_URL: string;\n    userIds:any =[];\n    departmentForm:Object={};\n    \n\n    constructor(private appService : AppService,private router: Router,private loaderService: LoaderService) {\n        this.loaderService.display(true);\n        this.socket = this.appService.getSocket();\n        $(\"#navigation\").show();\n        this.departmentList();\n        this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n        this.loggedUser= window.localStorage.getItem('user-credential');\n        this.loaderService.display(true);\n    }\n        \n    ngOnInit(): void {\n        \n         this.loaderService.display(true);\n         var that = this;\n         this.socket.on('success-editmode', function(data){\n             that.router.navigate(['/manage-users/edit', data])\n         });\n         this.socket.on('fail-editmode', function(data){\n             var x = document.getElementById(\"editError\")\n            x.className = \"show\";\n            setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n         });\n          this.loaderService.display(false);\n    }\n\n        \n    departmentList(){\n        this.appService.getDepartments().subscribe(res => {\n            this.departments=res.data;\n        },err => {\n            console.log(err);\n        });\n    }\n\n   \n    manageDepartment(f: NgForm){\n        var that = this;\n        if(this.departmentForm){\n            \n            swal({\n            title: 'Manage Department',\n            text:'Please enter the Reason',\n            input: 'textarea',\n            showCancelButton: true,\n            confirmButtonText: 'Submit',\n            showLoaderOnConfirm: true,\n            preConfirm: (text) => {\n                return new Promise((resolve) => {\n                    if (text === '') {\n                      swal.showValidationError('Please Enter Remark To Continue.')\n                    }\n                    resolve()\n                })\n            },\n          allowOutsideClick: () => !swal.isLoading()\n        }).then((result) => {\n            if (result.value) {\n                var text = result.value;\n                that.departmentForm['remark']=text;\n                this.appService.manageDepartments(this.departmentForm).subscribe(res => {\n                    $('#departmentModal').modal('hide');\n                    this.departmentForm={};\n                    this.departmentList();\n                },err => {\n                     console.log(err);\n                     swal({\n                        type: 'warning',\n                        title: 'Request Failed!',\n                        html: 'Try Again'\n                      });\n                });\n            }\n        });\n            \n            \n            \n            \n            \n            \n            \n        }\n    }\n    \n    \n    newDepartment(data=null){\n        this.departmentForm={};\n        if(data){\n            this.departmentEdit = data;\n            var datas ={\n                'data':data\n            }\n            this.appService.getDepartmentInfo(datas).subscribe(res => {\n                this.departmentForm=res.data;\n            },err => {\n                console.log(err);\n            });\n        }\n        $('#departmentModal').modal('show');\n    }\n\n  \n\n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/department.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\r\nimport { GlobalVariable } from '.././global';\r\nimport { AppService } from '.././services/app.service';\r\nimport {NgForm} from '@angular/forms';\r\nimport { Subject } from 'rxjs/Rx';\r\nimport {Router} from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoaderService } from '.././services/loader.service';\r\n\r\n\r\n@Component({\r\n\ttemplateUrl: '.././template/manage-form-control.html'\r\n})\r\nexport class FormControlComponent {\r\n         controluser : Object;\r\n         \r\n\tconstructor(private appService : AppService,private loaderService: LoaderService,private route: ActivatedRoute ,private router : Router ) {\r\n                \r\n                this.loaderService.display(true);\r\n                this.controluser = {};\r\n                this.controluser['controltype']= 'user';\r\n                \r\n                this.appService.getUserFormControls().subscribe(res => {\r\n                    this.controluser['controltype']= 'user';\r\n                    this.controluser = res.data;\r\n                },err => {\r\n                    console.log(err);\r\n                });\r\n                \r\n                this.loaderService.display(false);\r\n\r\n\t}\r\n        \r\n    ngOnInit() {\r\n       \r\n      }\r\n\r\n  ngOnDestroy() {\r\n\r\n  }\r\n  \r\n  formControlSubmit(f: NgForm){\r\n     if(this.controluser){\r\n         this.appService.manageFormControl(this.controluser).subscribe(res => {\r\n          console.log(res.data);\r\n//            if(this.id){\r\n//                    this.socket.emit('end-editmode',this.id);\r\n//            }\r\n\r\n               //     this.router.navigate(['/users']);\r\n        },err => {\r\n            console.log(err);\r\n        });\r\n     }\r\n     \r\n    \r\n     \r\n     \r\n      \r\n  }\r\n\r\n        \t\r\n\r\n      \r\n        \r\n//save Role detail\r\n//  \tsaveRole(f: NgForm){\r\n//            this.roledata['rolesdata'] = this.rolesdata;\r\n//                this.appService.saveRole(this.roledata).subscribe(res => {\r\n//                    f.resetForm();\r\n//                    // this.toastr.success(res.message, 'Success!');\r\n//                    this.appService.successMessage = res.message;\r\n//                    this.router.navigate(['/role']);\r\n//                    //this.rolelist(this.search);\r\n//                },err => {\r\n//                    this.toastr.error('Something went wrong!', 'Error!')});\r\n//\t  \t\r\n//  \t}\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/form-control.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { GlobalVariable } from '.././global';\nimport { Router } from \"@angular/router\";\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport {NgForm} from '@angular/forms';\nimport * as io from \"socket.io-client\";\n\ndeclare var $: any;\n@Component({\n  templateUrl: '.././template/more-login.html'\n})\nexport class LoginComponent implements OnInit {\n    logged: string;\n    login : Object;\n    BASE_API_URL: string;\n    LoginClassses: string;\n    socket:any;\n\n  \tconstructor(private appService : AppService,private router: Router) {\n               this.socket = this.appService.getSocket();\n               this.login = {};\n               $(\"#navigation\").hide(); \n               $('#main').removeAttr('id');\n               document.querySelector('body').classList.add('login');\n               this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n               if(window.localStorage.getItem('user-token')){\n                   var userid = window.localStorage.getItem('user-credential');\n                   this.socket.emit('logoutRequest',userid);\n                   window.localStorage.clear();\n               }\n        }\n        \n        ngOnInit(): void {\n            console.log('Login Component');\n        }\n        \n        loginContact(f: NgForm){\n            if(this.login){\n                this.socket.emit('login-request', {data: this.login}); \n            }\n        }\n        \n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/login.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { Router,ActivatedRoute  } from \"@angular/router\";\nimport { GlobalVariable } from '.././global';\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport {NgForm} from '@angular/forms';\nimport * as io from 'socket.io-client';\nimport { LoaderService } from '.././services/loader.service';\ndeclare var $: any;\n@Component({\n  templateUrl: '.././template/manage-role.html'\n})\nexport class ManageRoleComponent implements OnInit {\n    permissonValues: any;\n    roleControl: any;\n    userID: any;\n    rolesModel : any={};\n    rolePermission:'';\n    BASE_API_URL: string;\n    id: any;\n    socket:any =io(GlobalVariable.SOCKET_URL);\n    constructor(private appService : AppService,private route: ActivatedRoute ,private router : Router, private loaderService: LoaderService) {\n        this.loaderService.display(true);\n        this.appService.setSocket(this.socket);\n        $(\"#navigation\").show();\n        document.querySelector('body').classList.remove('login');\n        this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n        this.loaderService.display(true);\n        var that = this;\n        //get dynamic validation credential\n        that.appService.getRoleControls('dataneed').subscribe(res => {\n                    console.log(res.data);\n                    this.roleControl = res.data;\n                    that.route.params.subscribe(params => {\n                    that.id = params['id']; // (+) converts string 'id' to a number\n                    var editid = that.id\n                        if(editid){\n                            \n                            \n                                that.appService.getRoleInfo(editid).subscribe(res => {\n                                    console.log(res.data);\n                                    that.rolePermission = res.message['role_name'];\n                                    that.permissonValues = res.data;\n                                    that.permissonValues.forEach(function(item){\n                                        that.rolesModel[item.permission_name] = item.permission_value;\n                                    });\n                                },err => {\n                                     console.log(err);\n                                }); \n\n\n                                \n                        }\n                        that.loaderService.display(false);\n                    });\n        },err => {\n                console.log(err);\n        });\n        this.loaderService.display(false);\n    }\n        \n    ngOnInit(): void {\n        this.loaderService.display(false);\n    }\n    \n    roleFormSubmit(f: NgForm){\n        console.log(this.rolesModel);\n        console.log(this.rolePermission);\n        this.rolesModel['rolename'] = this.rolePermission;\n        if (this.id){\n            this.rolesModel['id'] = this.id;\n        }\n        this.appService.manageRole(this.rolesModel).subscribe(res => {\n            this.router.navigate(['/role-manager']);\n        },err => {\n            console.log(err);\n        });\n        \n        \n    }\n    \n\n    \n    \n    \n   \n    \n   \n\n        \n       \n  \t\n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/manage-role.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { Router,ActivatedRoute  } from \"@angular/router\";\nimport { GlobalVariable } from '.././global';\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport {NgForm} from '@angular/forms';\nimport * as io from 'socket.io-client';\nimport { LoaderService } from '.././services/loader.service';\nimport swal from 'sweetalert2';\ndeclare var $: any;\n@Component({\n  templateUrl: '.././template/manage-users.html'\n})\nexport class ManageUsersComponent implements OnInit {\n    departments: object={};\n    contactpasswordAlphabet: boolean;\n    contactpasswordNumeric: boolean;\n    contactpasswordInvalid: boolean;\n    controluser : Object;\n    userID: any;\n    formType: string;\n    logged: string;\n    managingUser :any={};\n    BASE_API_URL: string;\n    controlRole: object={};\n    user : Object={};\n    id: any;\n    socket:any =io(GlobalVariable.SOCKET_URL);\n    constructor(private appService : AppService,private route: ActivatedRoute ,private router : Router, private loaderService: LoaderService) {\n        this.loaderService.display(true);\n        this.controluser = {};\n        this.appService.setSocket(this.socket);\n        $(\"#navigation\").show();\n        document.querySelector('body').classList.remove('login');\n        this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n        this.loaderService.display(true);\n    }\n        \n    ngOnInit(): void {\n        \n        console.log('app component');\n        this.loaderService.display(true);\n        var that = this;\n        //get dynamic department name\n        this.appService.getDepartments().subscribe(res => {\n            this.departments=res.data;\n        },err => {\n            console.log(err);\n        });\n        \n        //get dynamic role names\n        that.appService.getRole().subscribe(res => {\n                    that.controlRole = res.data;\n        },err => {\n                console.log(err);\n        });\n        \n        //get dynamic validation credential\n        that.appService.getUserFormControls().subscribe(res => {\n                    that.controluser = res.data;\n        },err => {\n                console.log(err);\n        });\n        this.route.params.subscribe(params => {\n           that.id = params['id']; // (+) converts string 'id' to a number\n           var editid = that.id\n           if(editid){\n               that.loaderService.display(true);\n                    that.appService.getUserInfo(editid).subscribe(res => {\n                        that.user=res;\n                        that.formType='edit';\n                    },err => {\n                        console.log(err);\n                    });\n                that.loaderService.display(false);\n            }\n        });\n         this.loaderService.display(false);\n    }\n    \n    userFormSubmit(f: NgForm){\n        \n        \n        \n        var that=this;\n        if(this.id && this.user['contact_password']){\n          //  alert('a');\n            if(this.contactpasswordInvalid || this.contactpasswordNumeric || this.contactpasswordAlphabet){\n                return false;\n            }\n        }else if(this.user['contact_password']){\n       // alert('b');\n            if(this.contactpasswordInvalid || this.contactpasswordNumeric || this.contactpasswordAlphabet){\n                return false;\n            }\n        }\n        if(this.user['confirm_password'] != this.user['contact_password'] && this.user['contact_password']){\n           // alert('c');\n            return false;\n        }\n        else{\n        \n        swal({\n            title: 'Manage User',\n            text:'Please enter the Reason',\n            input: 'textarea',\n            showCancelButton: true,\n            confirmButtonText: 'Submit',\n            showLoaderOnConfirm: true,\n            preConfirm: (text) => {\n                return new Promise((resolve) => {\n                    if (text === '') {\n                      swal.showValidationError('Please Enter Remark To Continue.')\n                    }\n                    resolve()\n                })\n            },\n          allowOutsideClick: () => !swal.isLoading()\n        }).then((result) => {\n            if (result.value) {\n                var text = result.value;\n                that.user['remark']=text;\n                that.appService.manageUsers(this.user).subscribe(res => {\n                    that.router.navigate(['/users']);\n                },err => {\n                    swal({\n                        type: 'warning',\n                        title: 'Request Failed!',\n                        html: 'Try Again'\n                      });\n                });\n            }\n        });\n        }\n    }\n    \n    cancelForm(){\n        this.router.navigate(['/users']);\n    }\n    \n//    userFormSubmit(f: NgForm){\n//        if(this.contactpasswordInvalid || this.contactpasswordNumeric || this.contactpasswordAlphabet){\n//            return false;\n//        }else{\n//            this.appService.manageUsers(this.user).subscribe(res => {\n//                if(this.id){\n//                        this.socket.emit('end-editmode',this.id);\n//                }\n//                this.router.navigate(['/users']);\n//            },err => {\n//                console.log(err);\n//            });\n//        }        \n//        \n//    }\n    \n   \n    \n    passwordType(event){\n                $('#contactpassword').prop('type', 'text');\n    }\n    \n    _keyPress(event: any) {\n        \n       var Specialdata = event.target.value.match(/[~`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/g)||[];\n       if (Specialdata && Specialdata.length <= this.controluser['password_specialChar']){\n           this.contactpasswordInvalid=true;\n       }else{\n           this.contactpasswordInvalid=false;\n       }\n       var Numberdata =event.target.value.match(/\\d/g) || [];\n       if (Numberdata && Numberdata.length <= this.controluser['password_numeric']){\n           this.contactpasswordNumeric=true;\n       }else{\n           this.contactpasswordNumeric=false;\n       }\n       \n        var rx = /[a-z]/gi;\n        var AlphabetData = event.target.value.match(rx);\n        if (AlphabetData && AlphabetData.lebgth <= this.controluser['password_alphabets']) {\n          this.contactpasswordAlphabet=true;\n        }else{\n            this.contactpasswordAlphabet=false;\n        }\n    }\n\n        \n        //get users lists\n  \t\n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/manage-users.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { GlobalVariable } from '.././global';\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport * as io from \"socket.io-client\";\nimport { LoaderService } from '.././services/loader.service';\n\n\n\ndeclare var $: any;\n@Component({\n  templateUrl: '.././template/role.html'\n})\nexport class RoleComponent implements OnInit {\n    loggedUser: string;\n    socket:any;\n    roles:any=[];\n    logged: string;\n    BASE_API_URL: string;\n    userIds:any =[];\n    \n\n    constructor(private appService : AppService,private router: Router,private loaderService: LoaderService) {\n        this.loaderService.display(true);\n        this.socket = this.appService.getSocket();\n        $(\"#navigation\").show();\n        this.appService.getRoles('data').subscribe(res => {\n            console.log(res.data);\n            this.roles=res.data;\n        },err => {\n            console.log(err);\n        });\n        this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n        this.loggedUser= window.localStorage.getItem('user-credential');\n        this.loaderService.display(true);\n    }\n        \n    ngOnInit(): void {\n        \n         this.loaderService.display(true);\n         var that = this;\n         this.socket.on('success-editmode', function(data){\n             that.router.navigate(['/manage-users/edit', data])\n         });\n         this.socket.on('fail-editmode', function(data){\n             var x = document.getElementById(\"editError\")\n            x.className = \"show\";\n            setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n         });\n          this.loaderService.display(false);\n    }\n\n        \n\n\n   \n    manageRolePermissions(data:any){\n        this.router.navigate(['/role-manager/edit', data]);\n    }\n    \n\n  \n\n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/role.component.ts","import { Component, OnInit,ViewContainerRef ,ViewChild} from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { DataTablesModule ,DataTableDirective} from 'angular-datatables';\nimport { GlobalVariable } from '.././global';\nimport { AppService } from '.././services/app.service';\nimport { Subject } from 'rxjs/Rx';\nimport * as io from \"socket.io-client\";\nimport { LoaderService } from '.././services/loader.service';\nimport swal from 'sweetalert2';\n\n\ndeclare var $: any;\ndeclare var bootbox:any;\n@Component({\n  templateUrl: '.././template/users.html'\n})\nexport class UserComponent implements OnInit {\n    contactpasswordAlphabet: boolean;\n    contactpasswordNumeric: boolean;\n    contactpasswordInvalid: boolean;\n    controluser: object={};\n    controlRole: any;\n    loggedUser: string;\n    socket:any;\n    @ViewChild(DataTableDirective)\n    dtElement: DataTableDirective;\n    filterOpen : boolean;\n    search : Object;\n    logged: string;\n    BASE_API_URL: string;\n    dtOptions: DataTables.Settings = {};\n    dtTrigger: any = new Subject();\n    userIds:any =[];\n    passwordModel : Object = {};\n\n    constructor(private appService : AppService,private router: Router,private loaderService: LoaderService) {\n        this.loaderService.display(true);\n        this.socket = this.appService.getSocket();\n        $(\"#navigation\").show();\n        document.querySelector('body').classList.remove('login');\n        this.BASE_API_URL = GlobalVariable.BASE_API_URL;\n        this.search = {};\n        this.filterOpen = false;\n        console.log('users component');\n        this.usersList(this.search);\n        this.loggedUser= window.localStorage.getItem('user-credential');\n        this.loaderService.display(true);\n        //get dynamic validation credential\n        this.appService.getUserFormControls().subscribe(res => {\n                    this.controluser = res.data;\n        },err => {\n                console.log(err);\n        });\n        //get dynamic role names\n        this.appService.getRole().subscribe(res => {\n                    this.controlRole = res.data;\n        },err => {\n                console.log(err);\n        });\n        \n        \n    }\n        \n    ngOnInit(): void {\n        var that = this;\n        this.loaderService.display(true);\n        this.usersList(this.search);\n        this.socket.on('success-editmode', function(data){\n            if(data.type == 'formRequest'){\n                localStorage.setItem(\"editingModeID\", data.editid);\n                that.router.navigate(['/users/edit', data.editid]);\n            }else if(data.type=='statusRequest'){\n                that.updateStatus(data.editid);\n            }\n             \n        });\n    }\n    ngAfterViewInit(): void {\n        this.dtTrigger.next();\n    }\n        \n        //get users lists\n    usersList(data){\n        var that = this;\n        data['user_token'] = window.localStorage.getItem('user-token');\n        this.dtOptions = {\n          searching: false,\n        \"dom\": '<\"top\"f>rt<\"bottom\"ilp><\"clear\">',\n        \"lengthMenu\": [[10, 25, 50,100, -1], [10, 25, 50, 100,\"All\"]],\n           \"processing\": true,\n            \"language\": { processing: 'Loading...'},\n            \"serverSide\": true,\n            \"order\": [[ 1, \"desc\" ]],\n            ajax: { url: GlobalVariable.API_URL+'/get-all-users',type:'get',data:data},\n            columns: [\n                  {\n                    title: 'Username',\n                    data: 'contact_username'\n                  },\n                  {\n                    title: 'Email',\n                    data: 'contact_email'\n                  },\n                  {\n                    title: 'Status',\n                    data: 'contact_status',\n                    orderable: false,\n                    render:function(a,b,c){\n                        if (c.contact_status == 'enable'){\n                            return '<a href=\"javascript:void(0);\"><label class=\"status statusLabelEnabled\">Enabled</label></a>';              \n                        }else{\n                            return '<label class=\"status statusLabelDisabled\">Disabled</label>';\n                        }\n                    },\n                  },{\n                    title: 'Department',\n                    data: 'department_name',\n                    orderable: false,\n                  },\n                   {\n                    title: 'Role',\n                    data: 'role_name',\n                    orderable: false,\n                  },{\n                    title: 'Action',\n                            data: 'id',\n                            render:function(a :any,b : any,c:any){\n                                if (c.id != that.loggedUser){\n                                    return \"<button class='btn btn--icon edit' title='Edit User'><i class='fa fa-edit '></i>Edit</button>\";\n                                            //<button class='btn btn--icon password' title='Change Password'><i class='fa fa-key '></i>Password</button>\";\n                                }else{\n                                    return \"<button style='cursor: no-drop;' class='btn btn--icon' title='You Can Update Your Profile From My Profile'><i class='fa fa-edit '></i>Edit</button>\";\n//                                            <button style='cursor: no-drop;' class='btn btn--icon' title='You Can Update Your Password From My Profile'><i class='fa fa-key '></i>Password</button>\";\n                                }\n                                    \n                            },\n                    orderable: false\n                    }\n            ],\n            rowCallback: (row: Node, data: any | Object, index: number) => {\n                        const self = this;\n                       \n                        \n                        $(row).find('td:last').each(function(){\n                                \n                                $(this).find('.edit').click(function(){\n                                    self.editUser(data.id);\n                                });\n                                $(this).find('.password').click(function(){\n                                    self.changePassword(data.id,data.contact_username);\n                                });\n                               \n                        });\n                        $(row).find('td:nth-child(3)').each(function(){\n                               $(this).find('.status').click(function(){\n                                    self.changeStatus(data.id);\n                                });\n                        });\n                        self.loaderService.display(false);\n             }\n\n        \n        };\n//end of datatable \n    }\n        \n    rerender(): void {\n        this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n          dtInstance.destroy();\n          this.dtTrigger.next();\n        });\n    }\n\n    reloadTable(){\n            this.search = {};\n            console.log(this.search);\n            this.rerender();\n            this.usersList(this.search);\n    }\n        \n    showFilter(){\n        if(this.filterOpen){\n            this.filterOpen = false;\t\n        }else{\n            this.filterOpen = true;\t\n        }\n    }\n\n    hideFilter(){\n            this.filterOpen = false;\n    }\n\n    filterUsers(){\n            this.filterOpen = false;\n            this.rerender();\n            this.usersList(this.search);\n    }\n    //for editing we send a request to node and check whether its already in editing\n    editUser(data:any){\n        this.socket.emit('editmode', {userid: this.loggedUser, editid: data,type:'formRequest'});\n       // this.socket.emit('checking-editmode', {data: data}); \n      \n    }\n    \n    changePassword(data:any,name:any){\n        this.passwordModel['edit-user']=data;\n        this.passwordModel['username']=name;\n        $('#userPassword').modal('show');\n    }\n    \n     savePassword(){\n//        console.log(this.passwordModel);\n        var that = this;\n        swal({\n            title: 'Change Password',\n            text:'Please enter the reason for Changing Password',\n            input: 'textarea',\n            showCancelButton: true,\n            confirmButtonText: 'Submit',\n            showLoaderOnConfirm: true,\n            preConfirm: (text) => {\n                return new Promise((resolve) => {\n                    if (text === '') {\n                      swal.showValidationError('Please Enter Remark To Continue.')\n                    }\n                    resolve()\n                })\n            },\n          allowOutsideClick: () => !swal.isLoading()\n        }).then((result) => {\n            if (result.value) {\n                var text = result.value;\n                this.passwordModel['remark']=text;\n                this.appService.updatePassword(this.passwordModel).subscribe(res =>{\n                    $('#passwordModal').modal('hide');\n                    var x = document.getElementById(\"updatePass\")\n                    x.className = \"show\";\n                    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, 5000);\n                    $('#userPassword').modal('hide');\n                },err=>{\n                       console.log(err);\n                       swal({\n                        type: 'warning',\n                        title: 'Request Failed!',\n                        html: 'Try Again'\n                      });\n                });\n            }\n        });\n        \n        \n    }\n    \n    updateStatus(data:any){\n        var that = this;\n        swal({\n            title: 'Update Status',\n            text:'Please enter the reason for Updating Status',\n            input: 'textarea',\n            showCancelButton: true,\n            confirmButtonText: 'Submit',\n            showLoaderOnConfirm: true,\n            preConfirm: (text) => {\n                return new Promise((resolve) => {\n                    if (text === '') {\n                      swal.showValidationError('Please Enter Remark To Continue.')\n                    }\n                    resolve()\n                })\n            },\n          allowOutsideClick: () => !swal.isLoading()\n        }).then((result) => {\n            if (result.value) {\n                var text = result.value;\n                that.appService.changeStatus(data,text).subscribe(res => {\n                                that.rerender();\n                                that.usersList(that.search);\n                },err => {\n                      swal({\n                      type: 'warning',\n                      title: 'Request Failed!',\n                      html: 'Try Again'\n                    });\n                });\n            }\n        });\n    }\n    \n    changeStatus(data:any){\n       this.socket.emit('editmode', {userid: this.loggedUser, editid: data,type:'statusRequest'});\n    }\n    \n   \n    \n    deleteMultiple(){\n            this.deleteUsers();\n    }    \n        \n    deleteUsers(id:any =null){\n        \n       var that=this;\n       bootbox.confirm(\"Are You Sure\", \n       function(result){\n             if(result){\n                        let data = {};\n                        data['ids'] = [];\n                        if(id !=null){\n                           data['ids'].push(id);\n                        }else{\n                          data['ids'] = that.userIds ;\n                        }\n                        that.appService.deleteUsers(data).subscribe(res => {\n                                      that.rerender();\n                                      that.usersList(that.search);\n                        },err => {\n                            console.log(err);\n                        });\n             }\n       });\n\n        \n\n    }\n    \n    _keyPress(event: any) {\n        \n       var Specialdata = event.target.value.match(/[~`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/g)||[];\n       if (Specialdata && Specialdata.length <= this.controluser['password_specialChar']){\n           this.contactpasswordInvalid=true;\n       }else{\n           this.contactpasswordInvalid=false;\n       }\n       var Numberdata =event.target.value.match(/\\d/g) || [];\n       if (Numberdata && Numberdata.length <= this.controluser['password_numeric']){\n           this.contactpasswordNumeric=true;\n       }else{\n           this.contactpasswordNumeric=false;\n       }\n       \n        var rx = /[a-z]/gi;\n        var AlphabetData = event.target.value.match(rx);\n        if (AlphabetData && AlphabetData.lebgth <= this.controluser['password_alphabets']) {\n          this.contactpasswordAlphabet=true;\n        }else{\n            this.contactpasswordAlphabet=false;\n        }\n    }\n}\n\t\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/component/user.component.ts"," export const GlobalVariable = Object.freeze({\n     BASE_API_URL: 'http://192.168.1.107/tSoft',\n     LoginClass : 'login',\n     API_URL: 'http://192.168.1.107/tSoft/api/v1',\n     SOCKET_URL: 'http://192.168.1.107:4000',\n     //... more of your variables\n });\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/global.ts","import { Injectable } from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport { GlobalVariable } from '.././global';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/Rx';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class AppService {\r\n    public socket:Object={};\r\n    apiUrl: string;\r\n    public editingModeID:any;       //id of the editing form\r\n   // manageUserId: any={};\r\n\r\n    constructor(private http :Http) {\r\n                this.apiUrl = GlobalVariable.API_URL;\r\n    }\r\n    \r\n    setSocket(value: any):void{\r\n        this.socket=value;\r\n    }\r\n    getSocket(){\r\n        return this.socket;\r\n    }  \r\n    \r\n    loginContact(login :Object){\r\n                let param = this.addDefaultParam('post',login); \r\n\t\treturn  this.http.post(this.apiUrl+'/get-user-login',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    manageUsers(userData :Object){\r\n        let param = this.addDefaultParam('post',userData); \r\n        return  this.http.post(this.apiUrl+'/manage-users',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    manageFormControl(formData :Object){\r\n        let param = this.addDefaultParam('post',formData); \r\n        return  this.http.post(this.apiUrl+'/manage-form-control',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getUserFormControls(){\r\n        let param = this.addDefaultParam('post');\r\n        return  this.http.post(this.apiUrl+'/get-user-formControls',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getRole(){\r\n        let param = this.addDefaultParam('post');\r\n        return  this.http.post(this.apiUrl+'/get-role4select',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getDepartments(){\r\n        let param = this.addDefaultParam('post');\r\n        return  this.http.post(this.apiUrl+'/get-departments',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    manageDepartments(formData :Object){\r\n        let param = this.addDefaultParam('post',formData); \r\n        return  this.http.post(this.apiUrl+'/manage-departments',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getDepartmentInfo(requestData :any){\r\n        let param = this.addDefaultParam('post',requestData); \r\n        return  this.http.post(this.apiUrl+'/get-department-info',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    deleteUsers(id :any){\r\n        let param = this.addDefaultParam('post',id); \r\n        return  this.http.post(this.apiUrl+'/users/delete',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    changeStatus(data :any,remark){\r\n        let param = this.addDefaultParam('post',{data:data,status:status,remark:remark}); \r\n        return  this.http.post(this.apiUrl+'/users-status',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getUserInfo(userid :Object){\r\n        let param = this.addDefaultParam('post',{id:userid}); \r\n        return  this.http.post(this.apiUrl+'/get-user-info',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getRoleControls(datas :Object){\r\n        let param = this.addDefaultParam('post',{datas:datas}); \r\n        return  this.http.post(this.apiUrl+'/get-role-controls',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    manageRole(formData :Object){\r\n        let param = this.addDefaultParam('post',formData); \r\n        return  this.http.post(this.apiUrl+'/manage-role',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getRoleInfo(data :Object){\r\n        let param = this.addDefaultParam('post',{info:data}); \r\n        return  this.http.post(this.apiUrl+'/get-role-info',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    getRoles(data :Object){\r\n        let param = this.addDefaultParam('post',{info:data}); \r\n        return  this.http.post(this.apiUrl+'/get-roles',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    updatePassword(data :Object){\r\n        let param = this.addDefaultParam('post',data); \r\n        return  this.http.post(this.apiUrl+'/update-password',param).map((res: Response) => res.json());\r\n    }\r\n    \r\n    addDefaultParam(method:string='post',data:Object={}){\r\n              data['user_token'] = window.localStorage.getItem('user-token');\r\n              data['user_credential'] = window.localStorage.getItem('user-credential');\r\n               if(method =='post'){\r\n                   return data; \r\n               }else{\r\n                   return typeof data == 'string' ? data : Object.keys(data).map(\r\n                function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }\r\n              ).join('&');\r\n               }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/services/app.service.ts","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class LoaderService {\n    public status: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    display(value: boolean) {\n       // console.log('service');\n       //  console.log(value);\n        this.status.next(value);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/services/loader.service.ts","module.exports = \"\\n<div id=\\\"navigation\\\">\\n\\t\\t<div class=\\\"container-fluid\\\">\\n\\t\\t\\t<a href=\\\"#\\\" id=\\\"brand\\\">TantraSoft</a>\\n\\t\\t\\t\\n                        <ul class='main-nav'>\\n\\t\\t\\t\\t<li routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/login\\\" title=\\\"Login\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t\\t<span>Login</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n                                <li routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/dashboard\\\" title=\\\"Dashboard\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t\\t<span>Dashboard</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n                                <li routerLink=\\\"/department\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/department\\\" title=\\\"Department\\\">\\n\\t\\t\\t\\t\\t\\t<span>Department</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n                                <li routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/users\\\" title=\\\"Users\\\">\\n\\t\\t\\t\\t\\t\\t<span>Users</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n                                \\n                                <li routerLink=\\\"/form-control-manager\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/form-control-manager\\\" title=\\\"Form Control Manager\\\">\\n\\t\\t\\t\\t\\t\\t<span>Form Control Manager</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n                                <li routerLink=\\\"/role-manager\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/role-manager\\\" title=\\\"Role Manager\\\">\\n\\t\\t\\t\\t\\t\\t<span>Role Manager</span>\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"user\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"dropdown\\\">\\n\\t\\t\\t\\t\\t<a href=\\\"#\\\" class='dropdown-toggle' data-toggle=\\\"dropdown\\\">{{userNameLabel}}\\n\\t\\t\\t\\t\\t\\t<img src=\\\"{{BASE_API_URL}}/public/assets/img/demo/user-avatar.jpg\\\" alt=\\\"\\\">\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu pull-right\\\">\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"javascript:void(0);\\\" (click)=\\\"profileEdit();\\\">Edit profile</a></li>\\n                                                <li><a href=\\\"javascript:void(0);\\\" (click)=\\\"openPasswordModal();\\\">Change Password</a></li>\\n\\t\\t\\t\\t\\t\\t<li>\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0);\\\" (click)=\\\"signout();\\\">Sign out</a>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2%; margin-left: -2%;\\\" id=\\\"content\\\">\\n\\t\\t\\n\\t\\t<div id=\\\"main\\\">\\n\\t\\t\\t<div class=\\\"container-fluid\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n                                        <div id=\\\"box-content\\\">\\n                                            <router-outlet (activate)=\\\"changeOfRoutes()\\\">\\n                                                <div  *ngIf=\\\"showLoader\\\">\\n                                                    <div style=\\\"margin-top: 110px; text-align: center; font-size: 18px; font-weight: 700;\\\">\\n                                                        Please wait...\\n                                                        <img src=\\\"{{siteUrl}}/public/assets/img/du.gif\\\" class=\\\"img-circle\\\" alt=\\\"\\\">\\n                                                    </div>\\n                                                </div>\\n                                            </router-outlet>\\n                                       </div>\\n                                                  \\n                                                    <div id=\\\"snackbar\\\">Please Enter Valid Credentials</div>\\n                                                    <div  id=\\\"snackbares\\\">You Are Already Logged From Some Place</div>\\n                                                    <div  id=\\\"editError\\\">Already In Editing Mode</div>\\n                                                    <div id=\\\"updatePass\\\">Password Updated Successfully</div>\\n                                                    <div id=\\\"somethingWrong\\\">Something Went Wrong !!</div>\\n                                                    \\n                                                    \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n<div id=\\\"passwordModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n          <!-- Modal content-->\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\">Update Password</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <div class=\\\"portlet-body form\\\">\\n                <form  #passwordForm=\\\"ngForm\\\"  role=\\\"form\\\" novalidate (ngSubmit) = \\\"updatePassword(passwordForm);\\\" name=\\\"passwordForm\\\">\\n                  <div class=\\\"form-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Current Password</label>\\n                      <input class=\\\"form-control\\\" name=\\\"current_password\\\"  placeholder=\\\"Current Password\\\" type=\\\"password\\\" [(ngModel)]=\\\"changePassword.current_password\\\" #current_password=\\\"ngModel\\\" required>\\n                     <div *ngIf=\\\"current_password.invalid && (current_password.dirty || current_password.touched||passwordForm.submitted)\\\">\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"current_password.errors.required\\\">\\n                          Current Password is required.\\n                        </p>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label>New password</label>\\n                      \\n                        \\n                                <input id=\\\"contactpassword\\\"\\n                               type=\\\"password\\\"    minlength=\\\"{{controluser.password_length}}\\\" (keyup)=\\\"_keyPress($event)\\\"           \\n                                #contactpassword=\\\"ngModel\\\"\\n                                [(ngModel)]=\\\"changePassword.new_password\\\"\\n                                required class='form-control'  placeholder=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                        \\n                        <div *ngIf=\\\"contactpassword.invalid && (contactpassword.dirty || contactpassword.touched||passwordForm.submitted)\\\">\\n                                        <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpassword.errors.required\\\">\\n                                          Password is required.\\n                                        </p>\\n                                        <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpassword.errors.minlength\\\">\\n                                             Password Should Be Minimum {{controluser.password_length}} Character Long.\\n                                        </p>\\n                        </div>\\n                        <div *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\n                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\n                                      Password Should Contain atleast {{controluser.password_specialChar}} Special Character ,{{controluser.password_numeric}} Numeric Character ,{{controluser.password_alphabets}} Alphabetic Character.\\n                                    </p>\\n                        </div>\\n                      \\n<!--                      <input class=\\\"form-control\\\" name=\\\"new_password\\\" minlength=\\\"6\\\" placeholder=\\\"New password\\\" type=\\\"password\\\" [(ngModel)]=\\\"changePassword.new_password\\\" #new_password=\\\"ngModel\\\" required>\\n                      <div *ngIf=\\\"new_password.invalid && (new_password.dirty || new_password.touched||passwordForm.submitted)\\\">\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"new_password.errors.required\\\">\\n                          New Password is required.\\n                        </p>\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"passwordForm.submitted&&new_password.errors.minlength\\\">\\n                          New Password should not be 8 characters long.\\n                        </p>\\n                      </div>-->\\n                    </div>\\n                      \\n                      \\n                     <div class=\\\"form-group\\\">\\n                      <label>Confirm password</label>\\n                      <input class=\\\"form-control\\\" name=\\\"confirm_password\\\"  placeholder=\\\"Confirm password\\\" type=\\\"password\\\" [(ngModel)]=\\\"changePassword.confirm_password\\\" #confirm_password=\\\"ngModel\\\" required validateEqual=\\\"new_password\\\">\\n<!--                       <div *ngIf=\\\"confirm_password.invalid && (confirm_password.dirty || confirm_password.touched||passwordForm.submitted)\\\">-->\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"confirm_password.invalid && (confirm_password.dirty || confirm_password.touched||passwordForm.submitted) && confirm_password.errors.required\\\">\\n                          Confirm Password is required.\\n                        </p>\\n<!--                       </div>-->\\n                     \\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"changePassword.new_password != changePassword.confirm_password && changePassword.confirm_password != null\\\">\\n                            Password does not match\\n                        </p>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-actions\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"changePassword.new_password != changePassword.confirm_password && changePassword.confirm_password != null\\\"  class=\\\"btn default\\\">Save</button>\\n                    <button type=\\\"button\\\" class=\\\"btn default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/app.component.html\n// module id = ../../../../../resources/assets/src/app/template/app.component.html\n// module chunks = main","module.exports = \"<div class=\\\"wrapper\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"login-body\\\">\\n\\t\\t\\t<h2>Dashboard</h2>\\n\\t\\t\\t{{logged}}\\n\\t\\t</div>\\n\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/dashboard.html\n// module id = ../../../../../resources/assets/src/app/template/dashboard.html\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t<div class=\\\"box\\\">\\n\\t\\t\\t<div class=\\\"box-title\\\">\\n\\t\\t\\t\\t<h3>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-home\\\"></i>\\n\\t\\t\\t\\t\\t Departments\\n\\t\\t\\t\\t</h3>\\n                            <div class=\\\"pull-right\\\">\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"newDepartment()\\\"><button class=\\\"btn btn--icon\\\" title=\\\"Add Department\\\"><i class=\\\"fa fa-plus-circle\\\"></i>Add</button></a>\\n                            </div>\\n                        </div>\\n\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\n\\t\\t\\t\\t\\n                            <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-hover table-nomargin table-colored-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Department Name</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let data of departments\\\">\\n                                                                                    <td>{{data.department_name}}</td>\\n                                                                                    <td>\\n                                                                                        <a href=\\\"javascript:void(0);\\\" (click)=\\\"newDepartment(data.id)\\\"><button class=\\\"btn btn--icon\\\" title=\\\"Edit Department\\\"><i class=\\\"fa fa-edit\\\"></i>Edit</button></a>\\n                                                                                       \\n                                                                                    </td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div><div id=\\\"departmentModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n          <!-- Modal content-->\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n              <h4 class=\\\"modal-title\\\">Manage Department</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <div class=\\\"portlet-body form\\\">\\n                <form  #aForm=\\\"ngForm\\\"  role=\\\"form\\\" novalidate (ngSubmit) = \\\"manageDepartment(aForm);\\\" name=\\\"aForm\\\">\\n                  <div class=\\\"form-body\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Department Name</label>\\n                      <input class=\\\"form-control\\\" name=\\\"department_name\\\"  placeholder=\\\"Department Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"departmentForm.department_name\\\" #department_name=\\\"ngModel\\\" required>\\n                     <div *ngIf=\\\"department_name.invalid && (department_name.dirty || department_name.touched||aForm.submitted)\\\">\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"department_name.errors.required\\\">\\n                          Department Name is required.\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-actions\\\">\\n                    <button type=\\\"submit\\\"  class=\\\"btn default\\\">Save</button>\\n                    <button type=\\\"button\\\" class=\\\"btn default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/department.html\n// module id = ../../../../../resources/assets/src/app/template/department.html\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n                                            <form #aForm=\\\"ngForm\\\"  class='form-horizontal form-bordered'  role=\\\"form\\\" novalidate (ngSubmit) = \\\"aForm.valid&&formControlSubmit(aForm);\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box box-bordered box-color\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-bars\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tManage Form Control\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</h3>\\r\\n                                                                <div  class=\\\"pull-right\\\" style=\\\"margin-right: 16px;\\\">\\r\\n                                                                    <a routerLink=\\\"/dashboard\\\" title=\\\"Dashboard\\\"><button  class=\\\"btn default\\\"><i class=\\\"fa fa-home\\\"></i></button></a> \\r\\n                                                                        <a href=\\\"javascript:void(0);\\\" title=\\\"Save\\\" (click)=\\\"formControlSubmit()\\\"><button  class=\\\"btn default\\\"><i class=\\\"fa fa-save\\\"></i></button></a> \\r\\n                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"tabs-container\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul class=\\\"tabs tabs-inline tabs-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li class='active'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#first\\\" data-toggle='tab'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-user-circle-o\\\"></i>User</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#second\\\" data-toggle='tab'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-user\\\"></i>Account</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#thirds\\\" data-toggle='tab'>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-twitter\\\"></i>Social</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                            \\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"tab-content padding tab-content-inline\\\" style=\\\"min-height:100px;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"tab-pane active\\\" id=\\\"first\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-group panel-widget\\\" id=\\\"ac4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                                                                        <div class=\\\"form-group row\\\">\\r\\n                                                                                                <label for=\\\"textfield\\\"  title=\\\"Username Length\\\" class=\\\"control-label col-sm-2\\\">User ID Length</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <input style=\\\"    margin-left: 11px;\\\" name=\\\"controluseridLength\\\"\\r\\n                                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                                required \\r\\n                                                                                                                class='complexify-me form-control' \\r\\n                                                                                                                maxlength=\\\"20\\\"  \\r\\n                                                                                                                placeholder=\\\"User ID Length\\\"\\r\\n                                                                                                                #controluseridLength=\\\"ngModel\\\" \\r\\n                                                                                                                [(ngModel)]=\\\"controluser.userid_length\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                        <div *ngIf=\\\"controluseridLength.invalid && (controluseridLength.dirty || controluseridLength.touched||aForm.submitted)\\\">\\r\\n                                                                                                            <p class=\\\"text text-danger\\\" *ngIf=\\\"controluseridLength.errors.required\\\">\\r\\n                                                                                                              Please Enter Username Length.\\r\\n                                                                                                            </p>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                                    \\r\\n                                                                                    \\r\\n                                                                                        <div class=\\\"form-group row\\\">\\r\\n                                                                                                <label for=\\\"textfield\\\"  title=\\\"Username Length\\\" class=\\\"control-label col-sm-2\\\">Username Length</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <input style=\\\"    margin-left: 11px;\\\" name=\\\"controlusernameLength\\\"\\r\\n                                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                                required \\r\\n                                                                                                                class='complexify-me form-control' \\r\\n                                                                                                                maxlength=\\\"20\\\"  \\r\\n                                                                                                                placeholder=\\\"Username Length\\\"\\r\\n                                                                                                                #controlusernameLength=\\\"ngModel\\\" \\r\\n                                                                                                                [(ngModel)]=\\\"controluser.username_length\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                        <div *ngIf=\\\"controlusernameLength.invalid && (controlusernameLength.dirty || controlusernameLength.touched||aForm.submitted)\\\">\\r\\n                                                                                                            <p class=\\\"text text-danger\\\" *ngIf=\\\"controlusernameLength.errors.required\\\">\\r\\n                                                                                                              Please Enter Username Length.\\r\\n                                                                                                            </p>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                                    \\r\\n                                                                                        <div class=\\\"form-group row\\\">\\r\\n                                                                                                <label for=\\\"textfield\\\"  title=\\\"Username Length\\\" class=\\\"control-label col-sm-2\\\">User Initial Length</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <input style=\\\"margin-left: 11px;\\\" name=\\\"controluserInitialLength\\\"\\r\\n                                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                                required \\r\\n                                                                                                                class='complexify-me form-control' \\r\\n                                                                                                                maxlength=\\\"20\\\"  \\r\\n                                                                                                                placeholder=\\\"User Initial Length\\\"\\r\\n                                                                                                                #controluserInitialLength=\\\"ngModel\\\" \\r\\n                                                                                                                [(ngModel)]=\\\"controluser.userInitial_length\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                        <div *ngIf=\\\"controluserInitialLength.invalid && (controluserInitialLength.dirty || controluserInitialLength.touched||aForm.submitted)\\\">\\r\\n                                                                                                            <p class=\\\"text text-danger\\\" *ngIf=\\\"controluserInitialLength.errors.required\\\">\\r\\n                                                                                                              Please Enter User Initial Length.\\r\\n                                                                                                            </p>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                       \\r\\n                                                                                     <input [(ngModel)]=\\\"controluser.controltype\\\"  type=\\\"hidden\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                        <div class=\\\"form-group row\\\">\\r\\n                                                                                                        <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Password</label>\\r\\n                                                                                                        <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                                <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <label class='inline' title=\\\"Password Length\\\" for=\\\"c7\\\">Length</label>\\r\\n                                                                                                                </div>\\r\\n                                                                                                                <div class=\\\"col-sm-8\\\">\\r\\n                                                                                                                    <input required\\r\\n                                                                                                                            #controlpasswordLength=\\\"ngModel\\\" \\r\\n                                                                                                                            [(ngModel)]=\\\"controluser.password_length\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                                                                            style=\\\"margin: 1px;\\\" type=\\\"text\\\" id=\\\"c7\\\" class='form-control'>\\r\\n                                                                                                                             <div *ngIf=\\\"controlpasswordLength.invalid && (controlpasswordLength.dirty || controlpasswordLength.touched||aForm.submitted)\\\">\\r\\n                                                                                                                                <p class=\\\"text text-danger\\\" *ngIf=\\\"controlpasswordLength.errors.required\\\">\\r\\n                                                                                                                                  Please Enter Password Length.\\r\\n                                                                                                                                </p>\\r\\n                                                                                                                            </div>\\r\\n                                                                                                                </div>\\r\\n\\r\\n                                                                                                        </div>\\r\\n\\r\\n                                                                                                        <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\"></label>\\r\\n                                                                                                        <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                                <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <label class='inline' title=\\\"Special Character Count In Password\\\" for=\\\"c7\\\">Special Character</label>\\r\\n                                                                                                                </div>\\r\\n                                                                                                                <div class=\\\"col-sm-8\\\">\\r\\n                                                                                                                        <input required\\r\\n                                                                                                                             #controlpasswordSpecialChar=\\\"ngModel\\\" \\r\\n                                                                                                                            [(ngModel)]=\\\"controluser.password_specialChar\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                                                                            style=\\\"margin: 1px;\\\" type=\\\"text\\\" id=\\\"c7\\\" class='form-control' name=\\\"same3\\\">\\r\\n                                                                                                                             <div *ngIf=\\\"controlpasswordSpecialChar.invalid && (controlpasswordSpecialChar.dirty || controlpasswordSpecialChar.touched||aForm.submitted)\\\">\\r\\n                                                                                                                                <p class=\\\"text text-danger\\\" *ngIf=\\\"controlpasswordSpecialChar.errors.required\\\">\\r\\n                                                                                                                                  Please Enter Special Character Length.\\r\\n                                                                                                                                </p>\\r\\n                                                                                                                            </div>\\r\\n                                                                                                                </div>\\r\\n\\r\\n                                                                                                        </div>\\r\\n\\r\\n                                                                                                        <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\"></label>\\r\\n                                                                                                        <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                                <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <label class='inline'  title=\\\"Numeric Count In Password\\\" for=\\\"c7\\\">Numeric</label>\\r\\n                                                                                                                </div>\\r\\n                                                                                                                <div class=\\\"col-sm-8\\\">\\r\\n                                                                                                                        <input required\\r\\n                                                                                                                             #controlpasswordNumeric=\\\"ngModel\\\" \\r\\n                                                                                                                            [(ngModel)]=\\\"controluser.password_numeric\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                                                                            style=\\\"margin: 1px;\\\" type=\\\"text\\\" id=\\\"c7\\\" class='form-control' name=\\\"same3\\\">\\r\\n                                                                                                                             <div *ngIf=\\\"controlpasswordNumeric.invalid && (controlpasswordNumeric.dirty || controlpasswordNumeric.touched||aForm.submitted)\\\">\\r\\n                                                                                                                                <p class=\\\"text text-danger\\\" *ngIf=\\\"controlpasswordNumeric.errors.required\\\">\\r\\n                                                                                                                                  Please Enter Numeric Character Length.\\r\\n                                                                                                                                </p>\\r\\n                                                                                                                            </div>\\r\\n                                                                                                                </div>\\r\\n\\r\\n                                                                                                        </div>\\r\\n                                                                                                        <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\"></label>\\r\\n                                                                                                        <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                                <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                    \\r\\n                                                                                                                        <label class='inline' title=\\\"Alphabet Count In Password\\\" for=\\\"c7\\\">Alphabets</label>\\r\\n                                                                                                                </div>\\r\\n                                                                                                                <div class=\\\"col-sm-8\\\">\\r\\n                                                                                                                        <input required\\r\\n                                                                                                                             #controlpasswordAlphabets=\\\"ngModel\\\" \\r\\n                                                                                                                            [(ngModel)]=\\\"controluser.password_alphabets\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                                                                            style=\\\"margin: 1px;\\\" type=\\\"text\\\" id=\\\"c7\\\" class='form-control' name=\\\"same3\\\">\\r\\n                                                                                                                            <div *ngIf=\\\"controlpasswordAlphabets.invalid && (controlpasswordAlphabets.dirty || controlpasswordAlphabets.touched||aForm.submitted)\\\">\\r\\n                                                                                                                                <p class=\\\"text text-danger\\\" *ngIf=\\\"controlpasswordAlphabets.errors.required\\\">\\r\\n                                                                                                                                  Please Enter Alphabets Character Length.\\r\\n                                                                                                                                </p>\\r\\n                                                                                                                            </div>\\r\\n                                                                                                                </div>\\r\\n\\r\\n                                                                                                        </div>\\r\\n\\r\\n                                                                                        </div>\\r\\n                                                                                    \\r\\n                                                                                    \\r\\n                                                                                       \\r\\n                                                                                        \\r\\n                                                                                    <div class=\\\"form-group row\\\">\\r\\n                                                                                        <label for=\\\"textfield\\\" title=\\\"Role Visibility\\\" class=\\\"control-label col-sm-2\\\">Role</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.role\\\" value='show'\\r\\n                                                                                                                            type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"role\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">Yes</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.role\\\" value=\\\"hide\\\"\\r\\n                                                                                                                            type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"role\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">No</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                                    \\r\\n                                                                                    <div class=\\\"form-group row\\\">\\r\\n                                                                                        <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\" title=\\\"Status Visibility\\\">Status</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.status\\\" value=\\\"show\\\" type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"status\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">Yes</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.status\\\" value=\\\"hide\\\" type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"status\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">No</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                                         \\r\\n                                                                                        <div class=\\\"form-group row\\\">\\r\\n                                                                                        <label for=\\\"textfield\\\" title=\\\"Email Visibility\\\" class=\\\"control-label col-sm-2\\\">Email</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.email\\\" value='show'\\r\\n                                                                                                                            type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"email\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">Yes</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.email\\\" value=\\\"hide\\\"\\r\\n                                                                                                                            type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"email\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">No</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                                         \\r\\n                                                                                        <div class=\\\"form-group row\\\">\\r\\n                                                                                        <label for=\\\"textfield\\\" title=\\\"Email Visibility\\\" class=\\\"control-label col-sm-2\\\">Department</label>\\r\\n                                                                                                <div class=\\\"col-sm-10\\\">\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.department\\\" value='show'\\r\\n                                                                                                                            type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"department\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">Yes</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                        <div class=\\\"col-sm-2\\\">\\r\\n                                                                                                                        <input [(ngModel)]=\\\"controluser.department\\\" value=\\\"hide\\\"\\r\\n                                                                                                                            type=\\\"radio\\\" id=\\\"c7\\\" class='icheck-me' name=\\\"department\\\" data-skin=\\\"square\\\" data-color=\\\"blue\\\">\\r\\n                                                                                                                        <label class='inline' for=\\\"c7\\\">No</label>\\r\\n                                                                                                        </div>\\r\\n                                                                                                </div>\\r\\n                                                                                        </div>\\r\\n                                                                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-group -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"tab-pane\\\" id=\\\"second\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-group panel-widget\\\" id=\\\"ac5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"panel-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#c7\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#ac5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTab #2 Question #1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-title -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-heading -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"c7\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Illo eos doloribus dicta tempore magni. Dolores, obcaecati neque provident facere fugiat.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-body -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /#c1.panel-collapse collapse in -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel panel-default -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"panel-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#c8\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#ac5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTab #2 Lorem ipsum dolor sit amet ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-title -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-heading -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"c8\\\" class=\\\"panel-collapse collapse\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Vel, laborum pariatur laudantium nisi quae commodi nihil officia reiciendis voluptatum placeat distinctio tempore incidunt quasi perspiciatis ducimus in at iure qui voluptatem animi delectus deleniti\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tadipisci facilis sapiente ad repellat excepturi.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-body -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /#c1.panel-collapse collapse in -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel panel-default -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"panel-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#c9\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#ac5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTab #2 Question #3\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-title -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-heading -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"c9\\\" class=\\\"panel-collapse collapse\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis, nobis, nihil, repellat, adipisci quia soluta sit repellendus eos recusandae esse eveniet accusantium maiores a natus explicabo deserunt nostrum eaque nesciunt numquam aut! Nulla, aspernatur,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceat, quam nobis inventore temporibus animi laudantium vero commodi cupiditate officia rerum quis perspiciatis debitis repellendus laboriosam sapiente. Eos, suscipit, quasi voluptate sapiente eveniet amet ipsum.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-body -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /#c1.panel-collapse collapse in -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel panel-default -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-group -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"tab-pane\\\" id=\\\"thirds\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-group panel-widget\\\" id=\\\"ac6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"panel-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#c10\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#ac6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTab #3 Lorem ipsum dolor sit?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-title -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-heading -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"c10\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Illo eos doloribus dicta tempore magni. Dolores, obcaecati neque provident facere fugiat.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-body -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /#c1.panel-collapse collapse in -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel panel-default -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"panel-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#c11\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#ac6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTab #3 Lorem ipsum ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-title -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-heading -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"c11\\\" class=\\\"panel-collapse collapse\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Vel, laborum pariatur laudantium nisi quae commodi nihil officia reiciendis voluptatum placeat distinctio tempore incidunt quasi perspiciatis ducimus in at iure qui voluptatem animi delectus deleniti\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tadipisci facilis sapiente ad repellat excepturi.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-body -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /#c1.panel-collapse collapse in -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel panel-default -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"panel-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#c12\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#ac6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tTab #3 Question #3\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-title -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-heading -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"c12\\\" class=\\\"panel-collapse collapse\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis, nobis, nihil, repellat, adipisci quia soluta sit repellendus eos recusandae esse eveniet accusantium maiores a natus explicabo deserunt nostrum eaque nesciunt numquam aut! Nulla, aspernatur,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceat, quam nobis inventore temporibus animi laudantium vero commodi cupiditate officia rerum quis perspiciatis debitis repellendus laboriosam sapiente. Eos, suscipit, quasi voluptate sapiente eveniet amet ipsum.\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-body -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /#c1.panel-collapse collapse in -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel panel-default -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- /.panel-group -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                              \\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                \\r\\n                                            </form>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/manage-form-control.html\n// module id = ../../../../../resources/assets/src/app/template/manage-form-control.html\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n                                            <form #aForm=\\\"ngForm\\\"  class='form-horizontal form-bordered'  role=\\\"form\\\" novalidate (ngSubmit) = \\\"aForm.valid&&roleFormSubmit(aForm);\\\"  name=\\\"userFormForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box box-color box-bordered\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3><i class=\\\"fa fa-edit\\\"></i>Manage Role & Permission</h3>\\r\\n                                                                <div *ngIf=\\\"!id\\\" class=\\\"pull-right\\\" style=\\\"margin-right: 16px;\\\">\\r\\n                                                                    <a routerLink=\\\"/role-manager\\\"><button  class=\\\"btn default\\\"><i class=\\\"fa fa-arrow-left\\\"></i></button></a>\\r\\n                                                                    <button  class=\\\"btn default\\\"><i class=\\\"fa fa-save\\\"></i></button>\\r\\n                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"rolename\\\" class=\\\"control-label col-sm-2\\\">Role Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n                                                                                        <input id=\\\"rolename\\\"\\r\\n                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                #rolename=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"rolePermission\\\"\\r\\n                                                                                                required class='complexify-me form-control'  placeholder=\\\"Role Name\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                <div *ngIf=\\\"rolename.invalid && (rolename.dirty || rolename.touched||aForm.submitted)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"rolename.errors.required\\\">\\r\\n                                                                                                      Role Name is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                        <div class=\\\"form-group\\\">\\r\\n                                                                            <label style=\\\"margin-left: 40%;\\\" class=\\\"control-label\\\">Permissions:</label>\\r\\n                                                                        </div>                    \\r\\n                                    \\r\\n                                       \\r\\n                                                            \\r\\n<div class=\\\"form-group\\\">\\r\\n    <div *ngFor=\\\"let data of roleControl\\\">\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n        <label title=\\\"{{data.title}}\\\" for=\\\"{{data.title}}\\\" class=\\\"control-label col-sm-2\\\">{{data.title}}</label>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"col-sm-5\\\">\\r\\n                                                   <label style=\\\"text-transform: capitalize;\\\" class=\\\"containerradio\\\">\\r\\n                                                     <input value='{{data.first}}' [(ngModel)]=\\\"rolesModel[data.right_name]\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                    type=\\\"radio\\\"  name=\\\"{{data.right_name}}\\\" >\\r\\n                                                       <span class=\\\"checkmarkradio\\\"></span>{{data.first}}\\r\\n                                                   </label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-sm-5\\\">\\r\\n                                                    <label class=\\\"containerradio\\\" style=\\\"text-transform: capitalize;\\\" >\\r\\n                                                           \\r\\n                                                           <input value='{{data.last}}' [(ngModel)]=\\\"rolesModel[data.right_name]\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                        type=\\\"radio\\\"  name=\\\"{{data.right_name}}\\\" >\\r\\n                                                           <span class=\\\"checkmarkradio\\\"></span>{{data.last}}\\r\\n                                                       </label>\\r\\n                                                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                            \\r\\n                                                           \\r\\n                                    \\r\\n                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-actions\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                </form>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/manage-role.html\n// module id = ../../../../../resources/assets/src/app/template/manage-role.html\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box box-color box-bordered\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-title\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3><i class=\\\"fa fa-edit\\\"></i>Manage Users</h3>\\r\\n                                                                <div class=\\\"pull-right\\\" style=\\\"margin-right: 16px;\\\">\\r\\n                                     <a routerLink=\\\"/users\\\"><button  class=\\\"btn default\\\"><i class=\\\"fa fa-arrow-left\\\"></i></button></a> \\r\\n\\r\\n                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<form #aForm=\\\"ngForm\\\"  class='form-horizontal form-bordered'  role=\\\"form\\\" novalidate (ngSubmit) = \\\"aForm.valid&&userFormSubmit(aForm);\\\"  name=\\\"userFormForm\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">User ID</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n                                                                                    \\r\\n                                                                                        <input id=\\\"contactuserid\\\"\\r\\n                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                #contactuserid=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.contact_userid\\\"\\r\\n                                                                                                required class='complexify-me form-control' minlength=\\\"{{controluser.userid_length}}\\\"  placeholder=\\\"User ID\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                <div *ngIf=\\\"contactuserid.invalid && (contactuserid.dirty || contactuserid.touched||aForm.submitted)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactuserid.errors.required\\\">\\r\\n                                                                                                      User ID is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactuserid.errors.minlength\\\">\\r\\n                                                                                                      User ID Should Be Minimum {{controluser.userid_length}} Character Long\\r\\n                                                                                                    </p>\\r\\n                                                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n                                                                        <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Username</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n                                                                                    \\r\\n                                                                                        <input id=\\\"contactusername\\\"\\r\\n                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                #contactusername=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.contact_username\\\"\\r\\n                                                                                                required class='complexify-me form-control' minlength=\\\"{{controluser.username_length}}\\\"  placeholder=\\\"Username\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                <div *ngIf=\\\"contactusername.invalid && (contactusername.dirty || contactusername.touched||aForm.submitted)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactusername.errors.required\\\">\\r\\n                                                                                                      Username is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactusername.errors.minlength\\\">\\r\\n                                                                                                      Username Should Be Minimum {{controluser.username_length}} Character Long\\r\\n                                                                                                    </p>\\r\\n                                                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n                                                                        <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">User Initials</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n                                                                                    \\r\\n                                                                                        <input id=\\\"contactuserInitial\\\"\\r\\n                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                #contactuserInitial=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.contact_userinitial\\\"\\r\\n                                                                                                required class='complexify-me form-control' minlength=\\\"{{controluser.userInitial_length}}\\\"  placeholder=\\\"User Initials\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                                                                                <div *ngIf=\\\"contactuserInitial.invalid && (contactuserInitial.dirty || contactuserInitial.touched||aForm.submitted)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactuserInitial.errors.required\\\">\\r\\n                                                                                                      User Initial is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactuserInitial.errors.minlength\\\">\\r\\n                                                                                                      User Initial Should Be Minimum {{controluser.userInitial_length}} Character Long\\r\\n                                                                                                    </p>\\r\\n                                                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n                                                                    <div class=\\\"form-group\\\" *ngIf=\\\"controluser.department==='show'\\\">\\r\\n                                                                            <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Department</label>\\r\\n                                                                            <div class=\\\"col-sm-10\\\">\\r\\n                                                                                    \\r\\n                                                                                <select class=\\\"form-control\\\" name=\\\"contact_userdepartment\\\" [(ngModel)]=\\\"user.contact_userdepartment\\\" #contactuserdepartment=\\\"ngModel\\\">\\r\\n                                                                                    <option value=\\\"\\\">---Select</option>\\r\\n                                                                                    <option *ngFor=\\\"let item of departments\\\" value=\\\"{{item.id}}\\\">{{item.department_name}}</option>\\r\\n                                                                                  </select>\\r\\n                                                                                <div *ngIf=\\\"contactuserdepartment.invalid && (contactuserdepartment.dirty || contactuserdepartment.touched||aForm.submitted)\\\">\\r\\n                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactuserdepartment.errors.required\\\">\\r\\n                                                                                      Department is required.\\r\\n                                                                                    </p>\\r\\n                                                                                </div>\\r\\n                                                                                    \\r\\n                                                                            </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n                                                                        \\r\\n                                                                    \\r\\n                                                                        <div  *ngIf=\\\"!id\\\" class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Passworad</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  class=\\\"input-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"contactpassword\\\" (keyup)=\\\"_keyPress($event)\\\"\\r\\n                                                                                               type=\\\"password\\\"    minlength=\\\"{{controluser.password_length}}\\\"            \\r\\n                                                                                                #contactpassword=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.contact_password\\\"\\r\\n                                                                                                required class='complexify-me form-control'  placeholder=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span (click)=\\\"passwordType($event);\\\" class=\\\"input-group-addon\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-key\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n                                                                                        </div>\\r\\n                                                                                    <div *ngIf=\\\"contactpassword.invalid && (contactpassword.dirty || contactpassword.touched||aForm.submitted)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpassword.errors.required\\\">\\r\\n                                                                                                      Password is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpassword.errors.minlength\\\">\\r\\n                                                                                                         Password Should Be Minimum {{controluser.password_length}} Character Long.\\r\\n                                                                                                    </p>\\r\\n                                                                                    </div>\\r\\n                                                                                    <div *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\r\\n                                                                                                      Password Should Contain atleast {{controluser.password_specialChar}} Special Character ,{{controluser.password_numeric}} Numeric Character ,{{controluser.password_alphabets}} Alphabetic Character.\\r\\n                                                                                                    </p>\\r\\n                                                                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                        </div>\\r\\n                                                                    \\r\\n                                                                    \\r\\n                                                                        <div  *ngIf=\\\"id\\\" class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Password</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  class=\\\"col-sm-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"contactpassword\\\" (keyup)=\\\"_keyPress($event)\\\"\\r\\n                                                                                               type=\\\"password\\\"    minlength=\\\"{{controluser.password_length}}\\\"            \\r\\n                                                                                                #contactpassword=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.contact_password\\\"\\r\\n                                                                                                class='complexify-me form-control'  placeholder=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                                    <div *ngIf=\\\"user.contact_password\\\">\\r\\n                                                                                                    \\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"user.contact_password < controluser.password_length\\\">\\r\\n                                                                                                         Password Should Be Minimum {{controluser.password_length}} Character Long.\\r\\n                                                                                                    </p>\\r\\n                                                                                    </div>\\r\\n                                                                                    <div *ngIf=\\\"user.contact_password && (contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\r\\n                                                                                                      Password Should Contain atleast {{controluser.password_specialChar}} Special Character ,{{controluser.password_numeric}} Numeric Character ,{{controluser.password_alphabets}} Alphabetic Character.\\r\\n                                                                                                    </p>\\r\\n                                                                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                        </div>\\r\\n                                                                    \\r\\n                                                                        <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Confirm Password</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"confirmpassword\\\" \\r\\n                                                                                               type=\\\"password\\\"         \\r\\n                                                                                                #confirmpassword=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.confirm_password\\\"\\r\\n                                                                                                required class='complexify-me form-control'  placeholder=\\\"Confirm Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                                                                                        </div>\\r\\n                                                                                    <div *ngIf=\\\"user.confirm_password != user.contact_password && user.contact_password\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"user.confirm_password == null\\\">\\r\\n                                                                                                      Confirm Password is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"user.confirm_password != user.contact_password && user.confirm_password != null\\\">\\r\\n                                                                                                         Password and Confirm Password Does Not Match.\\r\\n                                                                                                    </p>\\r\\n                                                                                    </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n                                                                        \\r\\n                                                                    \\r\\n                                                                    \\r\\n                                                                    \\r\\n                                                                        <div class=\\\"form-group\\\" *ngIf=\\\"controluser.email==='show'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Email</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n                                                                                        <input id=\\\"contactemail\\\"\\r\\n                                                                                                type=\\\"text\\\"                \\r\\n                                                                                                #contactemail=\\\"ngModel\\\"\\r\\n                                                                                                [(ngModel)]=\\\"user.contact_email\\\"\\r\\n                                                                                                required class='complexify-me form-control' placeholder=\\\"Email\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                                                                                pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\">\\r\\n                                                                                                <div *ngIf=\\\"contactemail.invalid && (contactemail.dirty || contactemail.touched||aForm.submitted)\\\">\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactemail.errors.required\\\">\\r\\n                                                                                                      Email is required.\\r\\n                                                                                                    </p>\\r\\n                                                                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactemail.errors.pattern\\\">\\r\\n                                                                                                      Enter Correct Email\\r\\n                                                                                                    </p>\\r\\n                                                                                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n                                                                         <div class=\\\"form-group\\\" *ngIf=\\\"controluser.role==='show'\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Role</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n                                                                                    \\r\\n                                                                                    <select class=\\\"form-control\\\" name=\\\"f_website\\\" [(ngModel)]=\\\"user.contact_role\\\" #contactrole=\\\"ngModel\\\">\\r\\n                                                                                        <option value=\\\"\\\">---Select</option>\\r\\n                                                                                        <option *ngFor=\\\"let item of controlRole\\\" value=\\\"{{item.id}}\\\">{{item.role_name}}</option>\\r\\n                                                                                      </select>\\r\\n                                                                                    <div *ngIf=\\\"contactrole.invalid && (contactrole.dirty || contactrole.touched||aForm.submitted)\\\">\\r\\n                                                                                        <p class=\\\"text text-danger\\\" *ngIf=\\\"contactrole.errors.required\\\">\\r\\n                                                                                          Role is required.\\r\\n                                                                                        </p>\\r\\n                                                                                    </div>\\r\\n                                                                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n                                                                    \\r\\n\\r\\n                                                                    \\r\\n                                                                    <div class=\\\"form-group\\\" *ngIf=\\\"controluser.status==='show'\\\">\\r\\n                                                                            <label for=\\\"textfield\\\" class=\\\"control-label col-sm-2\\\">Status</label>\\r\\n                                                                            <div class=\\\"select col-sm-10\\\">\\r\\n                                                                            <select class=\\\"form-control\\\" name=\\\"mstatus\\\" [(ngModel)]=\\\"user.contact_status\\\" #mstatus=\\\"ngModel\\\" required>\\r\\n                                                                                <option value=\\\"enable\\\">Enabled</option>\\r\\n                                                                                <option value=\\\"disable\\\">Disabled</option>\\r\\n                                                                            </select>\\r\\n                                                                            <div class=\\\"select__arrow\\\"></div>\\r\\n                                                                            <div *ngIf=\\\"mstatus.invalid && (mstatus.dirty || mstatus.touched||aForm.submitted)\\\">\\r\\n                                                                              <p class=\\\"text text-danger\\\" *ngIf=\\\"mstatus.errors.required\\\">\\r\\n                                                                                Status is required.\\r\\n                                                                              </p>\\r\\n                                                                            </div>\\r\\n                                                                            </div>\\r\\n                                                                            \\r\\n                                                                          </div>\\r\\n                                                                    \\r\\n                                                                    \\r\\n                                                                    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-actions\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                                                                                <button type=\\\"button\\\" (click)=\\\"cancelForm()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/manage-users.html\n// module id = ../../../../../resources/assets/src/app/template/manage-users.html\n// module chunks = main","module.exports = \"<div>\\n    <div class=\\\"wrapper\\\">\\n\\t\\t<h1>\\n\\t\\t\\t<a href=\\\"javascript:void(0);\\\">\\n\\t\\t\\t\\t<img src=\\\"{{BASE_API_URL}}/public/assets/img/tantrasoft-logo.jpg\\\" alt=\\\"Logo\\\" class='retina-ready' width=\\\"59\\\" height=\\\"49\\\">TantraSoft</a>\\n\\t\\t</h1>\\n\\t\\t<div class=\\\"login-body\\\">\\n\\t\\t\\t<h2>SIGN IN</h2>\\n\\t\\t\\t<form #aForm=\\\"ngForm\\\"  role=\\\"form\\\" novalidate (ngSubmit) = \\\"aForm.valid&&loginContact(aForm);\\\"  name=\\\"agentForm\\\">\\n\\t\\t\\t\\t\\n                            \\n                            \\n                            <div class=\\\"form-group\\\">\\n                                    <input id=\\\"contactusername\\\"\\n                                                type=\\\"text\\\"                \\n                                                #contactemail=\\\"ngModel\\\"\\n                                                [(ngModel)]=\\\"login.contactemail\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                                                required class='complexify-me form-control' maxlength=\\\"20\\\"  placeholder=\\\"Email address\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n\\n                                <div *ngIf=\\\"contactemail.invalid && (contactemail.dirty || contactemail.touched||aForm.submitted)\\\">\\n                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactemail.errors.required\\\">\\n                                                      Email is required.\\n                                                    </p>\\n                                                    <div  *ngIf=\\\"contactemail.errors && contactemail.errors.pattern\\\">\\n                                                        Email is invalid\\n                                                    </div>\\n                                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactemail.errors.maxlength\\\">\\n                                                      Email shoud not be 20 characters long.\\n                                                    </p>\\n                                                </div>\\n                            </div>\\n                            \\n                            <div class=\\\"form-group\\\">\\n                                    <input\\n                                        id=\\\"contactPassword\\\"\\n                                        type=\\\"password\\\"                \\n                                        #contactPassword=\\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"login.contactPassword\\\"\\n                                        required class='form-control' placeholder=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n\\n                                        <div *ngIf=\\\"contactPassword.invalid && (contactPassword.dirty || contactPassword.touched||aForm.submitted)\\\">\\n                                                     <p class=\\\"text text-danger\\\"  *ngIf=\\\"contactPassword.errors && contactPassword.errors.required\\\">\\n                                                        Password is required\\n                                                         </p>\\n                                                </div>\\n                                \\n                            </div>\\n                            \\n                            \\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"submit\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" value=\\\"Sign In\\\" class='btn btn-primary'>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n                        \\n                         <div id=\\\"page-content-wrapper\\\">\\n             \\n        </div>\\n                        \\n\\t\\t\\t<div class=\\\"forget\\\">\\n\\t\\t\\t\\t<a href=\\\"#\\\">\\n\\t\\t\\t\\t\\t<span>Forgot password?</span>\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/more-login.html\n// module id = ../../../../../resources/assets/src/app/template/more-login.html\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t<div class=\\\"box\\\">\\n\\t\\t\\t<div class=\\\"box-title\\\">\\n\\t\\t\\t\\t<h3>\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-rouble\\\"></i>\\n\\t\\t\\t\\t\\t Role Manager\\n\\t\\t\\t\\t</h3>\\n                            <div class=\\\"pull-right\\\">\\n                                \\n                                <a routerLink=\\\"/role-manager/add\\\"><button class=\\\"btn default\\\" title=\\\"Add Role\\\"> <i class=\\\"fa fa-rouble\\\"></i></button></a>\\n                            \\n                           \\n                                    \\n                            </div>\\n                        </div>\\n\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\n\\t\\t\\t\\t\\n                            <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-hover table-nomargin table-colored-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Role Name</th>\\n<!--\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Permission</th>-->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let data of roles\\\">\\n                                                                                    <td>{{data.role_name}}</td>\\n<!--                                                                                    <td (click)=\\\"manageRolePermissions(data.id)\\\" style=\\\"cursor: pointer;\\\">Manage</td>-->\\n                                                                                    <td>\\n                                                                                        <a href='javascript:void(0);' (click)=\\\"manageRolePermissions(data.id)\\\" class=\\\"btn btn-blue\\\"><i class=\\\"fa fa-cogs\\\">&nbsp;Manage</i></a>\\n                                                                                       \\n                                                                                    </td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/role.html\n// module id = ../../../../../resources/assets/src/app/template/role.html\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t<div class=\\\"box\\\">\\r\\n\\t\\t\\t<div class=\\\"box-title\\\">\\r\\n\\t\\t\\t\\t<h3>\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-address-book-o\\\"></i>\\r\\n\\t\\t\\t\\t\\t Users\\r\\n\\t\\t\\t\\t</h3>\\r\\n                            <div class=\\\"pull-right\\\">\\r\\n<!--                                <button class=\\\"btn default\\\" title=\\\"Delete\\\" (click)=\\\"deleteMultiple()\\\" [disabled]=\\\"userIds.length ==0\\\"> <i class=\\\"fa fa-trash\\\"></i> </button>-->\\r\\n                                <a routerLink=\\\"/users/add\\\"><button class=\\\"btn default\\\" title=\\\"Add Users\\\"> <i class=\\\"fa fa-user-o\\\"></i></button></a>\\r\\n                            <button class=\\\"btn default\\\" title=\\\"Reload table\\\" (click)=\\\"reloadTable()\\\"> <i class=\\\"fa fa-refresh\\\"></i></button>\\r\\n                           \\r\\n                                    <div class=\\\"btn-group filter-btn\\\" [ngClass]=\\\"{'open':filterOpen}\\\">\\r\\n                                <button class=\\\"btn default dropdown-toggle\\\" id=\\\"menu1\\\" type=\\\"button\\\" (click)=\\\"showFilter()\\\" ><i class=\\\"fa fa-filter\\\"></i></button>\\r\\n                                 <div class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"menu1\\\" >\\r\\n                                        <div class=\\\"filter-option2\\\">\\r\\n            <div class=\\\"portlet-sub-title\\\"> Filters </div>\\r\\n            <div class=\\\"portlet-body form\\\">\\r\\n              <form  (ngSubmit) = \\\"filterUsers()\\\" role=\\\"form\\\" name=\\\"search_form\\\">\\r\\n                <div class=\\\"form-body\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                      <label>Username</label>\\r\\n                      <input class=\\\"form-control\\\" placeholder=\\\"Username\\\" name=\\\"f_username\\\" [(ngModel)]=\\\"search.username\\\"  type=\\\"text\\\"  >\\r\\n                    </div>\\r\\n                      <div class=\\\"form-group col-md-6\\\">\\r\\n                      <label>Email</label>\\r\\n                      <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" name=\\\"f_username\\\" [(ngModel)]=\\\"search.email\\\"  type=\\\"text\\\"  >\\r\\n                    </div>\\r\\n                </div>\\r\\n                    \\r\\n                     <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                      <label>Status</label>\\r\\n                      <select class=\\\"form-control\\\" name=\\\"mstatus\\\" [(ngModel)]=\\\"search.status\\\">\\r\\n                            <option value=\\\"enable\\\">Enabled</option>\\r\\n                            <option value=\\\"disable\\\">Disabled</option>\\r\\n                        </select>\\r\\n                        <div class=\\\"select__arrow\\\"></div>\\r\\n                    </div>\\r\\n                      <div class=\\\"form-group col-md-6\\\">\\r\\n                      <label>Role</label>\\r\\n                      <select class=\\\"form-control\\\" name=\\\"f_website\\\" [(ngModel)]=\\\"search.contact_role\\\">\\r\\n                        <option value=\\\"\\\">---Select</option>\\r\\n                        <option *ngFor=\\\"let item of controlRole\\\" value=\\\"{{item.id}}\\\">{{item.role_name}}</option>\\r\\n                      </select>\\r\\n                      \\r\\n                    </div>\\r\\n                </div>\\r\\n                    \\r\\n                  </div>\\r\\n                <div class=\\\"form-actions\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn default  dropdown-toggle\\\"   >Submit</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn default  dropdown-togglet\\\" (click)=\\\"hideFilter()\\\">Cancel</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n                            </div>\\r\\n                            </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\t\\t\\t<div class=\\\"box-content nopadding\\\">\\r\\n\\t\\t\\t\\t\\r\\n                            <table datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\" class=\\\"table table-hover table-nomargin table-colored-header table-striped table-bordered\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\"></table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"userPassword\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n          <!-- Modal content-->\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n              <h4 class=\\\"modal-title\\\">Change Password</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <div class=\\\"portlet-body form\\\">\\r\\n                <form  #passwordForm=\\\"ngForm\\\"  role=\\\"form\\\" novalidate (ngSubmit) = \\\"savePassword(passwordForm);\\\" name=\\\"passwordForm\\\">\\r\\n                  <div class=\\\"form-body\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Username</label>\\r\\n                      <input class=\\\"form-control\\\" name=\\\"username\\\" type=\\\"text\\\" disabled=\\\"\\\" [(ngModel)]=\\\"passwordModel.username\\\">\\r\\n                    </div>\\r\\n                      \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>New password</label>\\r\\n                      \\r\\n                        \\r\\n                                <input id=\\\"contactpasswords\\\"\\r\\n                               type=\\\"password\\\"    minlength=\\\"{{controluser.password_length}}\\\"            \\r\\n                                #contactpassword=\\\"ngModel\\\"\\r\\n                                [(ngModel)]=\\\"passwordModel.new_password\\\" (keyup)=\\\"_keyPress($event)\\\"\\r\\n                                required class='form-control'  placeholder=\\\"Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        \\r\\n                        <div *ngIf=\\\"contactpassword.invalid && (contactpassword.dirty || contactpassword.touched||passwordForm.submitted)\\\">\\r\\n                                        <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpassword.errors.required\\\">\\r\\n                                          Password is required.\\r\\n                                        </p>\\r\\n                                        <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpassword.errors.minlength\\\">\\r\\n                                             Password Should Be Minimum {{controluser.password_length}} Character Long.\\r\\n                                        </p>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\r\\n                                    <p class=\\\"text text-danger\\\" *ngIf=\\\"contactpasswordInvalid || contactpasswordNumeric || contactpasswordAlphabet\\\">\\r\\n                                      Password Should Contain atleast {{controluser.password_specialChar}} Special Character ,{{controluser.password_numeric}} Numeric Character ,{{controluser.password_alphabets}} Alphabetic Character.\\r\\n                                    </p>\\r\\n                        </div>\\r\\n                     \\r\\n                    </div>\\r\\n                      \\r\\n                      \\r\\n                     <div class=\\\"form-group\\\">\\r\\n                      <label>Confirm password</label>\\r\\n                      <input class=\\\"form-control\\\" name=\\\"confirm_password\\\"  placeholder=\\\"Confirm password\\\" type=\\\"password\\\" [(ngModel)]=\\\"passwordModel.confirm_password\\\" #confirm_password=\\\"ngModel\\\" required validateEqual=\\\"new_password\\\">\\r\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"confirm_password.invalid && (confirm_password.dirty || confirm_password.touched||passwordForm.submitted) && confirm_password.errors.required\\\">\\r\\n                          Confirm Password is required.\\r\\n                        </p>\\r\\n                     \\r\\n                        <p class=\\\"text text-danger\\\" *ngIf=\\\"passwordModel.new_password != passwordModel.confirm_password && passwordModel.confirm_password != null\\\">\\r\\n                            Password does not match\\r\\n                        </p>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-actions\\\">\\r\\n                    <button type=\\\"submit\\\" [disabled]=\\\"passwordModel.new_password != passwordModel.confirm_password && passwordModel.confirm_password != null\\\"  class=\\\"btn default\\\">Save</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn default\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/tSoft/resources/assets/src/app/template/users.html\n// module id = ../../../../../resources/assets/src/app/template/users.html\n// module chunks = main","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/tSoft/resources/assets/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 1\n// module chunks = main"],"sourceRoot":"webpack:///"}